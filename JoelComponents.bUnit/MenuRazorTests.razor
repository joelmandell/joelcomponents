@using JoelComponents.UI.Components.Menu
@using JoelComponents.UI.Extensions
@inherits TestContext

These tests are written entirely in razor and C# syntax.

Learn more at https://bunit.dev/docs/getting-started/writing-tests.html#creating-basic-tests-in-razor-files

@code {

    [Fact]
    public void ShouldThrowIfMultipleMenuItemsInRoot()
    {
        this.Services.AddJoelComponents();

        Assert.Throws<InvalidOperationException>( () => {
            //Arrange
            var cut = Render(@<Menu>
                <MenuItems>
                </MenuItems>
                <MenuItems>

                </MenuItems>
            </Menu>);
        });
    }
    
    [Fact]
    public void ShouldThrowIfMenuItemsInRoot_Has_A_MenuItems_As_A_Child()
    {
        this.Services.AddJoelComponents();

        Assert.Throws<InvalidOperationException>( () => {
            //Arrange
            var cut = Render(@<Menu>
                <MenuItems>
                    <MenuItems>
                    </MenuItems>
                </MenuItems>
            </Menu>);
        });
    }

}